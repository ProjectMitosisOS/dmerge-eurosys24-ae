# Namespace for sample application with eventing enabled
apiVersion: v1
kind: Namespace
metadata:
  name: knative-ns
  labels:
    eventing.knative.dev/injection: enabled
---
# A default broker
apiVersion: eventing.knative.dev/v1
kind: Broker
metadata:
  name: default
  namespace: knative-ns
  annotations:
    # Note: you can set the eventing.knative.dev/broker.class annotation to change the class of the broker.
    # The default broker class is MTChannelBasedBroker, but Knative also supports use of the other class.
    eventing.knative.dev/broker.class: MTChannelBasedBroker
spec: { }
---
# helloworld-python app deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-python
  namespace: knative-ns
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: helloworld-python
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: helloworld-python
          image: caribouf/helloworld-rust
          imagePullPolicy: Always
          env:
            - name: CE_SPECVERSION
              value: "0.3"
            - name: CE_TYPE
              value: "dev.knative.samples.helloworld"
---
# Service that exposes helloworld-python app.
# This will be the subscriber for the Trigger
apiVersion: v1
kind: Service
metadata:
  name: helloworld-python
  namespace: knative-ns
spec:
  type: NodePort
  selector:
    app: helloworld-python
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
      nodePort: 30000
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-display
  namespace: knative-ns
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: event-display
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: helloworld-python
          image: gcr.io/knative-releases/knative.dev/eventing/cmd/event_display
---
# Service that exposes event-display app.
# This will be the subscriber for the Trigger
kind: Service
apiVersion: v1
metadata:
  name: event-display
  namespace: knative-ns
spec:
  selector:
    app: event-display
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080


---
# Knative Eventing Trigger to trigger the helloworld-python service
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: helloworld-python
  namespace: knative-ns
spec:
  broker: default
  filter:
    attributes:
      type: dev.knative.samples.helloworld
      source: dev.knative.samples/source
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: helloworld-python

---

apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  name: event-display
  namespace: knative-ns
spec:
  broker: default
  filter:
    attributes:
      type: dev.knative.samples.helloworld
      source: knative/eventing/samples/faas
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: event-display